{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8090';\nexport const API_ENDPOINTS = {\n  JOIN: `${API_BASE_URL}/api/join`,\n  VOLUNTEER: `${API_BASE_URL}/api/volunteer`,\n  MEMBERSHIP: `${API_BASE_URL}/api/membership`,\n  SUPPORT: `${API_BASE_URL}/api/support`,\n  YOUTH: `${API_BASE_URL}/api/youth`,\n  CONTACT: `${API_BASE_URL}/api/contact`,\n  NEWSLETTER: `${API_BASE_URL}/api/newsletter`,\n  EVENTS: `${API_BASE_URL}/api/events`,\n  // Admin endpoints\n  ADMIN_LOGIN: `${API_BASE_URL}/api/admin/login`,\n  ADMIN_DASHBOARD: `${API_BASE_URL}/api/admin/dashboard`,\n  ADMIN_REGISTRATIONS: `${API_BASE_URL}/api/admin/registrations`,\n  ADMIN_EVENTS: `${API_BASE_URL}/api/admin/events`,\n  ADMIN_NEWS: `${API_BASE_URL}/api/admin/news`\n};\nexport const apiRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    }\n  };\n  try {\n    const response = await fetch(url, {\n      ...defaultOptions,\n      ...options\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\nexport const submitRegistration = async formData => {\n  return apiRequest(API_ENDPOINTS.JOIN, {\n    method: 'POST',\n    body: JSON.stringify({\n      ...formData,\n      timestamp: new Date().toISOString(),\n      source: 'website'\n    })\n  });\n};\nexport const submitContactForm = async formData => {\n  return apiRequest(API_ENDPOINTS.CONTACT, {\n    method: 'POST',\n    body: JSON.stringify(formData)\n  });\n};\nexport const subscribeNewsletter = async email => {\n  return apiRequest(API_ENDPOINTS.NEWSLETTER, {\n    method: 'POST',\n    body: JSON.stringify({\n      email\n    })\n  });\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","API_ENDPOINTS","JOIN","VOLUNTEER","MEMBERSHIP","SUPPORT","YOUTH","CONTACT","NEWSLETTER","EVENTS","ADMIN_LOGIN","ADMIN_DASHBOARD","ADMIN_REGISTRATIONS","ADMIN_EVENTS","ADMIN_NEWS","apiRequest","url","options","defaultOptions","headers","response","fetch","ok","Error","status","json","error","console","submitRegistration","formData","method","body","JSON","stringify","timestamp","Date","toISOString","source","submitContactForm","subscribeNewsletter","email"],"sources":["E:/coding/AssignProjects/Rajni Tech/INDL/INLD-website/frontend/src/utils/api.js"],"sourcesContent":["\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8090';\n\nexport const API_ENDPOINTS = {\n  JOIN: `${API_BASE_URL}/api/join`,\n  VOLUNTEER: `${API_BASE_URL}/api/volunteer`,\n  MEMBERSHIP: `${API_BASE_URL}/api/membership`,\n  SUPPORT: `${API_BASE_URL}/api/support`,\n  YOUTH: `${API_BASE_URL}/api/youth`,\n  \n  CONTACT: `${API_BASE_URL}/api/contact`,\n  NEWSLETTER: `${API_BASE_URL}/api/newsletter`,\n  EVENTS: `${API_BASE_URL}/api/events`,\n  \n  // Admin endpoints\n  ADMIN_LOGIN: `${API_BASE_URL}/api/admin/login`,\n  ADMIN_DASHBOARD: `${API_BASE_URL}/api/admin/dashboard`,\n  ADMIN_REGISTRATIONS: `${API_BASE_URL}/api/admin/registrations`,\n  ADMIN_EVENTS: `${API_BASE_URL}/api/admin/events`,\n  ADMIN_NEWS: `${API_BASE_URL}/api/admin/news`,\n};\nexport const apiRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n  };\n\n  try {\n    const response = await fetch(url, { ...defaultOptions, ...options });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\nexport const submitRegistration = async (formData) => {\n  return apiRequest(API_ENDPOINTS.JOIN, {\n    method: 'POST',\n    body: JSON.stringify({\n      ...formData,\n      timestamp: new Date().toISOString(),\n      source: 'website'\n    }),\n  });\n};\n\nexport const submitContactForm = async (formData) => {\n  return apiRequest(API_ENDPOINTS.CONTACT, {\n    method: 'POST',\n    body: JSON.stringify(formData),\n  });\n};\n\nexport const subscribeNewsletter = async (email) => {\n  return apiRequest(API_ENDPOINTS.NEWSLETTER, {\n    method: 'POST',\n    body: JSON.stringify({ email }),\n  });\n};\n"],"mappings":"AAEA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,OAAO,MAAMC,aAAa,GAAG;EAC3BC,IAAI,EAAE,GAAGL,YAAY,WAAW;EAChCM,SAAS,EAAE,GAAGN,YAAY,gBAAgB;EAC1CO,UAAU,EAAE,GAAGP,YAAY,iBAAiB;EAC5CQ,OAAO,EAAE,GAAGR,YAAY,cAAc;EACtCS,KAAK,EAAE,GAAGT,YAAY,YAAY;EAElCU,OAAO,EAAE,GAAGV,YAAY,cAAc;EACtCW,UAAU,EAAE,GAAGX,YAAY,iBAAiB;EAC5CY,MAAM,EAAE,GAAGZ,YAAY,aAAa;EAEpC;EACAa,WAAW,EAAE,GAAGb,YAAY,kBAAkB;EAC9Cc,eAAe,EAAE,GAAGd,YAAY,sBAAsB;EACtDe,mBAAmB,EAAE,GAAGf,YAAY,0BAA0B;EAC9DgB,YAAY,EAAE,GAAGhB,YAAY,mBAAmB;EAChDiB,UAAU,EAAE,GAAGjB,YAAY;AAC7B,CAAC;AACD,OAAO,MAAMkB,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACrD,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,GAAGF,OAAO,CAACE;IACb;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAAE,GAAGE,cAAc;MAAE,GAAGD;IAAQ,CAAC,CAAC;IAEpE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;AACD,OAAO,MAAME,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,OAAOd,UAAU,CAACd,aAAa,CAACC,IAAI,EAAE;IACpC4B,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,GAAGJ,QAAQ;MACXK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,MAAM,EAAE;IACV,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOT,QAAQ,IAAK;EACnD,OAAOd,UAAU,CAACd,aAAa,CAACM,OAAO,EAAE;IACvCuB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMU,mBAAmB,GAAG,MAAOC,KAAK,IAAK;EAClD,OAAOzB,UAAU,CAACd,aAAa,CAACO,UAAU,EAAE;IAC1CsB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO;IAAM,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}